<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<display-name>Napoleon</display-name>

	<!-- Default page to serve -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!--
		This Guice listener hijacks all further filters and servlets. Extra
		filters and servlets have to be configured in your
		ServletModule#configureServlets() by calling
		serve(String).with(Class<? extends HttpServlet>) and
		filter(String).through(Class<? extends Filter)
	<listener>
		<listener-class>eu.comexis.napoleon.server.guice.GuiceServletConfig</listener-class>
	</listener>

	<filter>
		<filter-name>guiceFilter</filter-name>
		<filter-class>com.google.inject.servlet.GuiceFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>guiceFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	-->
	
	<servlet>
		<servlet-name>ownerServlet</servlet-name>
		<servlet-class>eu.comexis.napoleon.server.service.OwnerServiceImpl</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>ownerServlet</servlet-name>
		<url-pattern>/napoleon/owner</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>tenantServlet</servlet-name>
		<servlet-class>eu.comexis.napoleon.server.service.TenantServiceImpl</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>tenantServlet</servlet-name>
		<url-pattern>/napoleon/tenant</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>realEstateServlet</servlet-name>
		<servlet-class>eu.comexis.napoleon.server.service.RealEstateServiceImpl</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>realEstateServlet</servlet-name>
		<url-pattern>/napoleon/realEstate</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>countryServlet</servlet-name>
		<servlet-class>eu.comexis.napoleon.server.service.CountryServiceImpl</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>countryServlet</servlet-name>
		<url-pattern>/napoleon/country</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>assocServlet</servlet-name>
		<servlet-class>eu.comexis.napoleon.server.service.AssocServiceImpl</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>assocServlet</servlet-name>
		<url-pattern>/napoleon/association</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>condoServlet</servlet-name>
		<servlet-class>eu.comexis.napoleon.server.service.CondoServiceImpl</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>condoServlet</servlet-name>
		<url-pattern>/napoleon/condominium</url-pattern>
	</servlet-mapping>
	
	<!-- Add this to your web.xml to enable remote API on Java. -->
  <servlet>
    <servlet-name>remoteapi</servlet-name>
    <servlet-class>com.google.apphosting.utils.remoteapi.RemoteApiServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>remoteapi</servlet-name>
    <url-pattern>/remote_api</url-pattern>
  </servlet-mapping>
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>remoteapi</web-resource-name>
      <url-pattern>/remote_api</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <role-name>admin</role-name>
    </auth-constraint>
  </security-constraint>
  
  
  <servlet>
    <servlet-name>initDatastore</servlet-name>
    <servlet-class>eu.comexis.napoleon.server.service.InitDatastore</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>initDatastore</servlet-name>
    <url-pattern>/initDatastore</url-pattern>
  </servlet-mapping>
  
  <servlet>
    <servlet-name>ExtractDatastoreAsXML</servlet-name>
    <servlet-class>eu.comexis.napoleon.server.service.ExtractDatastoreAsXML</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>ExtractDatastoreAsXML</servlet-name>
    <url-pattern>/ExtractDatastoreAsXML</url-pattern>
  </servlet-mapping>	

</web-app>